#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct movie{
	char title[100];
	double rating;
} MOVIE;
MOVIE* movies;
int size;
int read_file();
void save_file();
int main()
{
	int i;
	printf("몇편이나 저장하시겠습니까?");
	scanf("%d", &size);
	getchar();
	movies = (MOVIE*)malloc(sizeof(MOVIE) * size);
	if (movies == NULL)
	{
		printf("동적 메모리 할당 오류");
		exit(1);
	}
	if (read_file() == 0)
	{
		for (i = 0; i < size; i++)
		{
			printf("영화 제목 : ");
			gets(movies[i].title);
			printf("영화 평점 : ");
			scanf("%lf", &movies[i].rating);
			getchar();
		}
	}

	printf("============================\n");
	printf(" 제목   \t  평점\n");
	printf("============================\n");
	for (i = 0; i < size; i++)
		printf("%s \t %f\n", movies[i].title, movies[i].rating);
	printf("============================\n");
	save_file();
	free(movies);
}

void save_file()
{
	FILE* fp;
	if ((fp = fopen("movies.txt", "wb")) == NULL)
	{
		printf("파일 movies.txt를 열 수 없습니다.\n");
		return;
	}
	if (movies != NULL)
		fwrite(movies, sizeof(MOVIE), size, fp);
	fclose(fp);
}

int read_file()
{
	FILE* fp;
	if ((fp = fopen("movies.txt", "rb")) == NULL)
	{
		printf("파일 movies.txt를 열 수 없습니다.\n");
		return 0;
	}
	if (movies != NULL)
		fread(movies, sizeof(MOVIE), size, fp);
	fclose(fp);
	return 1;
}